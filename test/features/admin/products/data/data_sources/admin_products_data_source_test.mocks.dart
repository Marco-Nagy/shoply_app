// Mocks generated by Mockito 5.4.4 from annotations
// in shoply/test/features/admin/products/data/data_sources/admin_products_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:shoply/features/admin/products/data/data_sources/apis/admin_products_api_service.dart'
    as _i6;
import 'package:shoply/features/admin/products/data/model/create_product/create_product_response.dart'
    as _i3;
import 'package:shoply/features/admin/products/data/model/delete_category/delete_product.dart'
    as _i5;
import 'package:shoply/features/admin/products/data/model/get_products_list/get_all_products.dart'
    as _i2;
import 'package:shoply/features/admin/products/data/model/update_product/update_product_response.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetAllProductsResponse_0 extends _i1.SmartFake
    implements _i2.GetAllProductsResponse {
  _FakeGetAllProductsResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateProductResponse_1 extends _i1.SmartFake
    implements _i3.CreateProductResponse {
  _FakeCreateProductResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateProductResponse_2 extends _i1.SmartFake
    implements _i4.UpdateProductResponse {
  _FakeUpdateProductResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteProductResponse_3 extends _i1.SmartFake
    implements _i5.DeleteProductResponse {
  _FakeDeleteProductResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AdminProductsApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdminProductsApiService extends _i1.Mock
    implements _i6.AdminProductsApiService {
  MockAdminProductsApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.GetAllProductsResponse> getProductList(
          Map<String, dynamic>? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductList,
          [query],
        ),
        returnValue: _i7.Future<_i2.GetAllProductsResponse>.value(
            _FakeGetAllProductsResponse_0(
          this,
          Invocation.method(
            #getProductList,
            [query],
          ),
        )),
      ) as _i7.Future<_i2.GetAllProductsResponse>);

  @override
  _i7.Future<_i3.CreateProductResponse> createProduct(
          Map<String, dynamic>? mutation) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProduct,
          [mutation],
        ),
        returnValue: _i7.Future<_i3.CreateProductResponse>.value(
            _FakeCreateProductResponse_1(
          this,
          Invocation.method(
            #createProduct,
            [mutation],
          ),
        )),
      ) as _i7.Future<_i3.CreateProductResponse>);

  @override
  _i7.Future<_i4.UpdateProductResponse> updateProduct(
          Map<String, dynamic>? mutation) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProduct,
          [mutation],
        ),
        returnValue: _i7.Future<_i4.UpdateProductResponse>.value(
            _FakeUpdateProductResponse_2(
          this,
          Invocation.method(
            #updateProduct,
            [mutation],
          ),
        )),
      ) as _i7.Future<_i4.UpdateProductResponse>);

  @override
  _i7.Future<_i5.DeleteProductResponse> deleteProduct(
          Map<String, dynamic>? mutation) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteProduct,
          [mutation],
        ),
        returnValue: _i7.Future<_i5.DeleteProductResponse>.value(
            _FakeDeleteProductResponse_3(
          this,
          Invocation.method(
            #deleteProduct,
            [mutation],
          ),
        )),
      ) as _i7.Future<_i5.DeleteProductResponse>);
}
